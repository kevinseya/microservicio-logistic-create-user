name: CI/CD to EC2

on:
  push:
    branches: [ "test" ]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t kevinseya/logistic_create_user:latest .

      - name: Push Docker Image
        run: docker push kevinseya/logistic_create_user:latest

  deploy-to-ec2:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH key for EC2 access
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: SSH into EC2 and deploy container
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_DNS }} << 'EOF'
            # 1) Verificar si Docker está instalado, si no, instalarlo.
            if ! command -v docker &> /dev/null
            then
              echo "Docker no está instalado. Procediendo con la instalación..."
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "Docker ya está instalado."
            fi

            # 2) Bajar la imagen de Docker Hub
            docker pull kevinseya/logistic_create_user:latest

            # 3) Detener y eliminar el contenedor anterior
            sudo docker stop logistic_create_user || true
            sudo docker rm logistic_create_user || true

            # 4) Generar .env con secretos
            echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            # Agrega más variables si requieres

            # 5) Correr contenedor usando ese .env
            sudo docker run -d --name logistic_create_user \
              --env-file .env \
              -p 8080:8080 \
              kevinseya/logistic_create_user:latest
          EOF
